–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º, –∫–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ –∏ –±—ç–∫–µ –≤ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ.

## 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞ (Frontend)

–í–∞—à–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞ –≤–∫–ª—é—á–∞–µ—Ç –±–∞–∑–æ–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π –∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ email, –æ–¥–Ω–∞–∫–æ –µ—ë –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å. –í–æ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏:

### ‚úîÔ∏è **–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã**
1. **–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏:** —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—è –Ω–µ –ø—É—Å—Ç—ã –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ö–æ—Ç—è –±—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤.
2. **–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:** –¥–æ–±–∞–≤—å—Ç–µ –º–∞—Å–∫—É –≤–≤–æ–¥–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, +7(...)).
3. **–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è:** —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤).
4. **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π:** –ø—Ä–∏–º–µ–Ω—è–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫ —Å–ª–æ–∂–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π.

–í–æ—Ç –ø—Ä–∏–º–µ—Ä —É–ª—É—á—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ —Ñ—Ä–æ–Ω—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞–∫–µ—Ç–∞ `react-hook-form` –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫ –≤—Ä–æ–¥–µ `clsx` –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏:

```javascript
// forms/RegisterForm.tsx
"use client";

import { useForm } from 'react-hook-form';
import { yupResolver } from '@hookform/resolvers/yup';
import * as Yup from 'yup';
import { useState } from 'react';
import styles from './RegisterForm.module.css';

Yup.addMethod(Yup.string, 'phoneNumber', function (message) {
  return this.matches(/^\+?\d{1,15}$/, message);
});

const schema = Yup.object().shape({
  username: Yup.string().min(3, '–õ–æ–≥–∏–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π').max(150, '–õ–æ–≥–∏–Ω —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π').required(),
  first_name: Yup.string().trim().min(2, '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞').required(),
  last_name: Yup.string().trim().min(2, '–§–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞').required(),
  phone_number: Yup.string().phoneNumber('–¢–µ–ª–µ—Ñ–æ–Ω –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ').nullable(),
  email: Yup.string().email('E-mail –≤–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ').required(),
  password: Yup.string().min(8, '–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π').matches(/\d/, '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—É').required(),
  confirm_password: Yup.string().oneOf([Yup.ref('password'), null], '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç').required(),
  pin_code: Yup.string().matches(/^[0-9]{5}$/, 'PIN-–∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–ª–∏–Ω–æ–π —Ä–æ–≤–Ω–æ 5 —Ü–∏—Ñ—Ä').required(),
});

const RegisterForm = () => {
  const { register, handleSubmit, formState: { errors } } = useForm({
    resolver: yupResolver(schema),
  });

  const onSubmit = async (data) => {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    try {
      const res = await fetch('/api/register/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      if (res.ok) {
        alert('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å');
      } else {
        const result = await res.json();
        alert(result.detail || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      }
    } catch (err) {
      console.error(err);
      alert('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
    }
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)} className={styles.formContainer}>
      <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>

      <input {...register('username')} placeholder="–õ–æ–≥–∏–Ω" className={errors.username ? `${styles.inputField} ${styles.error}` : styles.inputField}/>
      {errors.username && <span>{errors.username.message}</span>}

      <input {...register('first_name')} placeholder="–ò–º—è" className={errors.first_name ? `${styles.inputField} ${styles.error}` : styles.inputField}/>
      {errors.first_name && <span>{errors.first_name.message}</span>}

      <input {...register('last_name')} placeholder="–§–∞–º–∏–ª–∏—è" className={errors.last_name ? `${styles.inputField} ${styles.error}` : styles.inputField}/>
      {errors.last_name && <span>{errors.last_name.message}</span>}

      <input {...register('phone_number')} placeholder="–¢–µ–ª–µ—Ñ–æ–Ω (+7...)" className={errors.phone_number ? `${styles.inputField} ${styles.error}` : styles.inputField}/>
      {errors.phone_number && <span>{errors.phone_number.message}</span>}

      <input {...register('email')} placeholder="Email" className={errors.email ? `${styles.inputField} ${styles.error}` : styles.inputField}/>
      {errors.email && <span>{errors.email.message}</span>}

      <input {...register('password')} type="password" placeholder="–ü–∞—Ä–æ–ª—å" className={errors.password ? `${styles.inputField} ${styles.error}` : styles.inputField}/>
      {errors.password && <span>{errors.password.message}</span>}

      <input {...register('confirm_password')} type="password" placeholder="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è" className={errors.confirm_password ? `${styles.inputField} ${styles.error}` : styles.inputField}/>
      {errors.confirm_password && <span>{errors.confirm_password.message}</span>}

      <input {...register('pin_code')} placeholder="PIN-–∫–æ–¥ (5 —Ü–∏—Ñ—Ä)" className={errors.pin_code ? `${styles.inputField} ${styles.error}` : styles.inputField}/>
      {errors.pin_code && <span>{errors.pin_code.message}</span>}

      <button type="submit" className={styles.submitBtn}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
    </form>
  );
};

export default RegisterForm;
```

### ‚ö†Ô∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:
- –ü–∞–∫–µ—Ç—ã `react-hook-form` –∏ `yup` –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —É–ø—Ä–æ—â—ë–Ω–Ω–æ–π –∏ –º–æ—â–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏.
- –ü–æ–ª—è —Ñ–æ—Ä–º—ã –ø–æ–º–µ—á–∞—é—Ç—Å—è —Å—Ç–∏–ª–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º.
- –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –≤—ã–≤–æ–¥—è—Ç—Å—è –ø—Ä—è–º–æ –ø–æ–¥ –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ –ø–æ–ª—è–º–∏.

---

## 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞ (Backend)

–í–∞—à –±–µ–∫–µ–Ω–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ö–æ—Ä–æ—à–æ, –æ–¥–Ω–∞–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É—Å–∏–ª–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Ä–∞—Å—à–∏—Ä—è—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤—Ö–æ–¥—è—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

### üìå **–û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞ –±—ç–∫–µ–Ω–¥–µ:**

#### ‚úîÔ∏è **–†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö:**
–ü–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—á–∏—Å—Ç–∏—Ç–µ –≤—Ö–æ–¥—è—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.

```python
def clean_input(value):
    return value.strip() if isinstance(value, str) else value
```

–ó–∞—Ç–µ–º –æ–±–µ—Ä–Ω–∏—Ç–µ –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å –≤ —Å–µ—Ä–∏–∞–ª–∞–π–∑–µ—Ä–µ –≤ —Ç–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏:

```python
class UserSerializer(serializers.ModelSerializer):
    def validate_username(self, value):
        cleaned_value = clean_input(value)
        if len(cleaned_value) < 3:
            raise serializers.ValidationError("–õ–æ–≥–∏–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π")
        return cleaned_value

    def validate_email(self, value):
        cleaned_value = clean_input(value)
        if "@" not in cleaned_value:
            raise serializers.ValidationError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π E-mail")
        return cleaned_value
```

#### ‚úîÔ∏è **–ó–∞—â–∏—Ç–∞ –ø–∞—Ä–æ–ª—è:**
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å Django –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:

```python
from django.contrib.auth.hashers import make_password

class UserSerializer(serializers.ModelSerializer):
    # ...
    def create(self, validated_data):
        password = validated_data.pop('password')
        hashed_password = make_password(password)
        user = CustomUser(**validated_data)
        user.password = hashed_password
        user.save()
        return user
```

#### ‚úîÔ∏è **–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏:**
Django –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ –∏ email, –æ–¥–Ω–∞–∫–æ –ø–æ–ª–µ–∑–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –Ω–∞ —É—Ä–æ–≤–Ω–µ —Ñ–æ—Ä–º—ã.

```python
class UserSerializer(serializers.ModelSerializer):
    def validate_username(self, value):
        existing_user = CustomUser.objects.filter(username=value).exists()
        if existing_user:
            raise serializers.ValidationError("–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∑–∞–Ω—è—Ç")
        return value
```

---

## –ò—Ç–æ–≥–æ–≤—ã–µ —à–∞–≥–∏:

1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–∫–µ—Ç `react-hook-form` –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É `yup` –¥–ª—è –ø—Ä–æ—Å—Ç–æ–π –∏ –≥–∏–±–∫–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ.
2. –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—É—é –æ—á–∏—Å—Ç–∫—É –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –±—ç–∫–µ–Ω–¥–µ –∏ –æ–±–µ—Å–ø–µ—á—å—Ç–µ –∑–∞—â–∏—Ç—É –ø–∞—Ä–æ–ª—è.
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –ø–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–≠—Ç–∏ –º–µ—Ä—ã –ø–æ–≤—ã—Å—è—Ç –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.