/// frontend/nextjs-dashboard/app/auth/login/LoginForm.tsx

'use client';

import React, { useState, useEffect } from 'react';
import axios from '@/app/utils/axiosConfig'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Axios
import { usePathname, useSearchParams, redirect } from 'next/navigation';  // –ù–æ–≤—ã–π API –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
import LoadingPage from '@/app/auth/login/loading';
import { useAuth } from '@/app/auth/contexts/auth-provider'; // –ö–æ–Ω—Ç–µ–∫—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
import { EyeIcon, EyeSlashIcon } from '@heroicons/react/24/outline'; // üî• –¥–æ–±–∞–≤–∏–ª–∏ –∏–∫–æ–Ω–∫–∏

type CredentialsType = {
  username: string;
  password: string;
};

type ApiError = {
  response?: {
    data: {
      detail: string;
    };
  };
};

const LoginForm = () => {
  const [showPassword, setShowPassword] = useState(false);
  const togglePasswordVisibility = () => setShowPassword((prevState) => !prevState);

  const { loginSuccess } = useAuth(); // –î–æ—Å—Ç—É–ø –∫ –º–µ—Ç–æ–¥—É loginSuccess

  // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [credentials, setCredentials] = useState<CredentialsType>({ username: '', password: '' });

  // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  const [loading, setLoading] = useState(false);

  // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  const [errorMessage, setErrorMessage] = useState<string | null>(null);

  // –•—É–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const pathname = usePathname();
  const searchParams = useSearchParams();

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const setAuthorizationHeader = () => {
      const token = localStorage.getItem('authToken');

      console.log('Token –∏–∑ LoginForm.tsx:', localStorage.getItem('authToken'));

      if (token) {
        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
      }
    };
    setAuthorizationHeader();
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
  const handleRefreshToken = async () => {
    const refreshToken = localStorage.getItem('refreshToken');
    console.log('Refresh token:', refreshToken); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    if (refreshToken) {
      try {
        const response = await axios.post('/api/refresh-token', { refresh_token: refreshToken });
        console.log('refreshToken 2: ', refreshToken)
        if (response.status === 200) {
          localStorage.setItem('authToken', response.data.access_token);
          setErrorMessage(null);
        } else {
          throw new Error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞.');
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', error);
        setErrorMessage('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.');
      }
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π
  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = event.target;
    setCredentials((prevState) => ({ ...prevState, [name]: value }));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
    setLoading(true); // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è

    try {
      const response = await axios.post('/api/login', credentials);

      if (response.status === 200) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º —É—Å–ø–µ—à–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        localStorage.setItem('authToken', response.data.access_token);
        localStorage.setItem('refreshToken', response.data.refresh_token); // –°–æ—Ö—Ä–∞–Ω—è–µ–º refresh-—Ç–æ–∫–µ–Ω
        console.log('Refresh token saved:', localStorage.getItem('refreshToken')); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        loginSuccess();
        const redirectUrl = sessionStorage.getItem('redirectUrl') || '/dashboard';
        sessionStorage.clear(); // –û—á–∏—â–∞–µ–º –≤—Å—é —Å–µ—Å—Å–∏–æ–Ω–Ω—É—é –ø–∞–º—è—Ç—å
        redirect(redirectUrl); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.');
      }
    } catch (error: any & ApiError) {
      // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å
      console.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error);
      console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error.response.data);

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      let message = '';
      if (error.response) {
        switch (error.response.status) {
          case 401:
            message = "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.";
            handleRefreshToken(); // –í—ã–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ 401
            break;
          case 403:
            message = "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.";
            break;
          case 500:
            message = "–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.";
            break;
          default:
            message = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.";
        }
      } else {
        message = "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
        console.error('–û—à–∏–±–∫–∞:', error.message);
      }
      setErrorMessage(message);
    } finally {
      setLoading(false);
    }
  };

  return (
    <>
      {loading && <LoadingPage />}
      {!loading && (
        <form onSubmit={handleSubmit} className="max-w-md mx-auto p-6 bg-amber-50 shadow-lg rounded-xl">
          <h2 className="text-2xl font-semibold mb-6 text-center text-cyan-950">–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>

          {/* –ü–æ–ª–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          <div className="mb-4">
            <label htmlFor="username" className="block text-gray-700 text-sm font-bold mb-2">
              –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
            </label>
            <input
              id="username"
              type="text"
              name="username"
              value={credentials.username}
              onChange={handleChange}
              className="shadow appearance-none border rounded w-full py-2 px-3 bg-stone-100 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-stone-400 focus:border-zinc-600"
            />
          </div>

          {/* –ü–æ–ª–µ –ø–∞—Ä–æ–ª—è */}
          <div className="mb-4 relative">
            <label htmlFor="password" className="block text-gray-700 text-sm font-bold mb-2">
              –ü–∞—Ä–æ–ª—å:
            </label>
            <input
              id="password"
              type={showPassword ? 'text' : 'password'}
              name="password"
              value={credentials.password}
              onChange={handleChange}
              className="shadow appearance-none border rounded w-full py-2 px-3 bg-stone-100 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-stone-400 focus:border-zinc-600"
            />
            <div className="absolute inset-y-0 right-0 pr-3 flex items-center">
              <button
                type="button"
                onClick={togglePasswordVisibility}
                className="pt-7 cursor-pointer outline-none focus:outline-none"
              >
                {showPassword ? (
                  <EyeSlashIcon className="h-5 w-5 text-gray-500" aria-hidden="true" />
                ) : (
                  <EyeIcon className="h-5 w-5 text-gray-500" aria-hidden="true" />
                )}
              </button>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex justify-between items-center">
            <button
              type="submit"
              disabled={loading}
              className={`bg-sky-500 hover:bg-sky-700 text-white font-bold py-2 px-4 rounded ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}
            >
              {loading ? '–ü–æ–¥–æ–∂–¥–∏—Ç–µ...' : '–í–æ–π—Ç–∏'}
            </button>

            <button
              type="button"
              onClick={() => redirect('/auth/register')} // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é redirect()
              disabled={loading}
              className={`bg-slate-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}
            >
              {loading ? '–ü–æ–¥–æ–∂–¥–∏—Ç–µ...' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'}
            </button>
          </div>

          {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
          {errorMessage && (
            <p className="mt-4 text-red-900 text-center">{errorMessage}</p>
          )}
        </form>
      )}
    </>
  );
};

export default LoginForm;
