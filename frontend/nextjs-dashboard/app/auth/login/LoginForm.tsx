// frontend/nextjs-dashboard/app/auth/login/LoginForm.tsx

import React, { useState } from 'react';
import axios from 'axios';
import { usePathname, useSearchParams, redirect } from 'next/navigation';  // –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ö—É–∫–æ–≤
import LoadingPage from '@/app/auth/login/loading';

// type CredentialsType = {
//   username: string;
//   password: string;
// };

type ApiError = {
  response?: {
    data: {
      detail: string;
    };
  };
};

const LoginForm = () => {
  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–≤–æ–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [credentials, setCredentials] = useState({ username: '', password: '' });



  // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  const [loading, setLoading] = useState(false);
  // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–∞ boolean
  //const [loading, setLoading] = useState<boolean>(false);  üî• –¥–æ–±–∞–≤–∏–ª–∏ —Ç–∏–ø boolean



  // –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
  const [errorMessage, setErrorMessage] = useState<string | null>(null);

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = event.target;
    setCredentials(prevState => ({
      ...prevState,
      [name]: value
    }));
  };

  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault(); // –û—Ç–º–µ–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    setLoading(true); // –í–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏

    // type AuthResponse = {
    //   access_token: string;
    // };

    try {
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
      const response = await axios.post('/api/login/', credentials);
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
      localStorage.setItem('authToken', response.data.access_token);
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ dashboard
      redirect('/dashboard');
    } catch (error: any & ApiError) {

      console.error('frontend/nextjs-dashboard/app/dashboard/login.tsx (49): –û—à–∏–±–∫–∞:', error);

      if (error.response?.data.detail) {                                       //
        setErrorMessage(error.response.data.detail);                           //

      } else {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        // setErrorMessage('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
        setErrorMessage("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.");
      }
    } finally {
      setLoading(false); // –í—ã–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    }
  };

  return (
    <>
      {loading && (<LoadingPage />)}
      {!loading && (
        <form onSubmit={handleSubmit} className="max-w-md mx-auto p-6 bg-amber-50 shadow-lg rounded-xl">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <h2 className="text-2xl font-semibold mb-6 text-center text-cyan-950">–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>

          {/* –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          <div className="mb-4">
            <label
              htmlFor="username"
              className="block text-gray-700 text-sm font-bold mb-2"
            >
              –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
            </label>
            <input
              id="username"
              type="text"
              name="username"
              value={credentials.username}
              onChange={handleChange}
              className="shadow appearance-none border rounded w-full py-2 px-3 bg-stone-100 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-stone-400 focus:border-zinc-600"
            />
          </div>

          {/* –ü–∞—Ä–æ–ª—å */}
          <div className="mb-4">
            <label
              htmlFor="password"
              className="block text-gray-700 text-sm font-bold mb-2"
            >
              –ü–∞—Ä–æ–ª—å:
            </label>
            <input
              id="password"
              type="password"
              name="password"
              value={credentials.password}
              onChange={handleChange}
              className="shadow appearance-none border rounded w-full py-2 px-3 bg-stone-100 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-stone-400 focus:border-zinc-600"
            />
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex justify-between items-center">
            <button
              type="submit"
              disabled={loading}
              className={`bg-sky-500 hover:bg-sky-700 text-white font-bold py-2 px-4 rounded ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}
            >
              {loading ? '–ü–æ–¥–æ–∂–¥–∏—Ç–µ...' : '–í–æ–π—Ç–∏'}
            </button>

            <button
              type="button"
              onClick={() => redirect('/auth/register')}
              disabled={loading}
              className={`bg-slate-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}
            >
              {loading ? '–ü–æ–¥–æ–∂–¥–∏—Ç–µ...' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'}
            </button>
          </div>

          {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
          {errorMessage && (
            <p className="mt-4 text-red-900 text-center">{errorMessage}</p>
          )}
        </form>
      )}
    </>
  );
};

export default LoginForm;
